<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules>
        <FaultRule name="AuthenticationError">
            <Condition>(fault.name Matches "ExecutionFailed")</Condition>
            <Step>
                <Condition>(calloutResponse.status.code = "401") </Condition>
                <Name>AuthenticationError</Name>
            </Step>
        </FaultRule>
    </FaultRules>
    <Flows>
        <Flow name="Get Public Key">
            <Description/>
            <Request/>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Get-Public-Key</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Send-Public-Key</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/publicKey") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Upgrade KVM">
            <Description/>
            <Request>
                <Step>
                    <Condition>request.header.Authorization is null</Condition>
                    <FaultRules/>
                    <Name>AuthenticationError</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Authenticate-Call</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Extract-Upgrade-KVM-Params</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Private-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Future-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Public-Key</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Public-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Upgrade-KVM</Name>
                </Step>
                <Step>
                    <Condition>errText isnot null</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Bad-Request</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Update-KVM-Upgraded-Keys</Name>
                </Step>
                <Step>
                    <Condition>deletePublicKey2 = true</Condition>
                    <FaultRules/>
                    <Name>Delete-KVM-EMG-Keys</Name>
                </Step>
                <Step>
                    <Condition>deleteFutureKeys = true</Condition>
                    <FaultRules/>
                    <Name>Delete-KVM-Future-Keys</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Send-Upgrade-KVM-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/upgradeKvm") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Rotate Key">
            <Description/>
            <Request>
                <Step>
                    <Condition>request.header.Authorization is null</Condition>
                    <FaultRules/>
                    <Name>AuthenticationError</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Authenticate-Call</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Extract-Rotate-Key-Params</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Private-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Future-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Public-Key</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Public-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Rotate-Key</Name>
                </Step>
                <Step>
                    <Condition>errText isnot null</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Bad-Request</Name>
                </Step>
                <Step>
                    <Condition>nbf = false</Condition>
                    <FaultRules/>
                    <Name>Update-KVM-Rotated-Keys</Name>
                </Step>
                <Step>
                    <Condition>nbf = true</Condition>
                    <FaultRules/>
                    <Name>Update-KVM-Future-Keys</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Send-Rotate-Key-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/rotateKey") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Verify API Key">
            <Description/>
            <Request>
                <Step>
                    <Condition>request.header.Authorization is null</Condition>
                    <FaultRules/>
                    <Name>AuthenticationError</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Authenticate-Call</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Extract-API-Key</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Verify-API-Key</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Lookup-Entity</Name>
                </Step>
                <Step>
                    <Condition>lookupcache.Lookup-Entity.cachehit = false</Condition>
                    <FaultRules/>
                    <Name>Access-App-Info-2</Name>
                </Step>
                <Step>
                    <Condition>lookupcache.Lookup-Entity.cachehit = false</Condition>
                    <FaultRules/>
                    <Name>Products-to-JSON-2</Name>
                </Step>
                <Step>
                    <Condition>lookupcache.Lookup-Entity.cachehit = false</Condition>
                    <FaultRules/>
                    <Name>Populate-Entity</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Private-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Future-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Public-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Future-Key-Nbf</Name>
                </Step>
                <Step>
                    <Condition>applyNewKey = true</Condition>
                    <FaultRules/>
                    <Name>Update-KVM-For-New-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Set-JWT-Variables</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Generate-VerifyKey-Token</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Set-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/verifyApiKey") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Get API Products">
            <Description/>
            <Request>
                <Step>
                    <Condition>request.header.Authorization is null</Condition>
                    <FaultRules/>
                    <Name>AuthenticationError</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Authenticate-Call</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Lookup-Filter</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Condition>lookupcache.Lookup-Filter.cachehit = false</Condition>
                    <FaultRules/>
                    <Name>JavaCallout</Name>
                </Step>
                <Step>
                    <Condition>lookupcache.Lookup-Filter.cachehit = false</Condition>
                    <FaultRules/>
                    <Name>Populate-Product-List</Name>
                </Step>
                <Step>
                    <Condition>lookupcache.Lookup-Filter.cachehit = true</Condition>
                    <FaultRules/>
                    <Name>Send-Product-List</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/products") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Obtain Access Token">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Extract-OAuth-Params</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Params</Name>
                </Step>
                <Step>
                    <Condition>errText isnot null</Condition>
                    <FaultRules/>
                    <Name>AuthenticationError</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Verify-API-Key</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Create-OAuth-Request</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Access-App-Info</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Products-to-JSON</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>AccessTokenRequest</Name>
                </Step>
                <Step>
                    <Condition>oauthV2.AccessTokenRequest.failed is true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Unknown-Request</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Private-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Future-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Public-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Future-Key-Nbf</Name>
                </Step>
                <Step>
                    <Condition>applyNewKey = true</Condition>
                    <FaultRules/>
                    <Name>Update-KVM-For-New-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Set-JWT-Variables</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Generate-Access-Token</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Set-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/token") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Refresh Access Token">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Extract-Refresh-Params</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Create-Refresh-Request</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Access-App-Info</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Products-to-JSON</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>RefreshAccessToken</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Private-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Future-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Get-Public-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Future-Key-Nbf</Name>
                </Step>
                <Step>
                    <Condition>applyNewKey = true</Condition>
                    <FaultRules/>
                    <Name>Update-KVM-For-New-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Set-JWT-Variables</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Generate-Access-Token</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Set-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/refresh") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Get JWK Public Keys">
            <Description>This flow returns public keys as JWK</Description>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Get-Public-Keys</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Generate-JWK</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Send-JWK-Message</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/jwkPublicKeys") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Version">
            <Request/>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>ReturnVersion</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/v2/version") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="DistributedQuota">
            <Request>
                <Step>
                    <Condition>request.header.Authorization is null</Condition>
                    <FaultRules/>
                    <Name>AuthenticationError</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Authenticate-Call</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Set-Quota-Variables</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>DistributedQuota</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Adjust-Quota</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Set-Quota-Response</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/v2/quotas**") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="Unknown Request">
            <Description>Unknown Request</Description>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Raise-Fault-Unknown-Request</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <PreFlow name="PreFlow">
        <Request/>
        <Response/>
    </PreFlow>
    <HTTPProxyConnection>
        <BasePath>/edgemicro-auth</BasePath>
        <Properties/>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="noroute"/>
</ProxyEndpoint>